= form_for(:request, url: url, method: :get, id: 'requests-filter-form') do |form|
  .row
    .col-md-4.col-lg-3.px-0.px-md-3.sticky-top.mb-3#requests-filter-desktop
      .card
        %strong.d-block.d-md-none.p-3{ data: { 'bs-toggle': 'collapse', 'bs-target': '#filters' },
                                    aria: { expanded: true, controls: 'filters' } }
          Filtered by: #{params[:status]&.humanize}
          %i.float-end.mt-1.fa.fa-chevron-down#requests-dropdown-trigger
        .collapse#filters
          = render partial: 'webui/shared/bs_requests/requests_filter',
                   locals: { selected_filter: selected_filter, creators: bs_requests_creators, url: url  }
    .col-md-8.col-lg-9.px-0.px-md-3.d-none#requests-list-loading
      = render partial: 'webui/shared/loading', locals: { text: 'Loading...', wrapper_css: ['loading'] }
    .col-md-8.col-lg-9.px-0.px-md-3#requests-list
      .card.sticky-top.mb-3#requests-filter-search-text
        .card-body.row
          .col
          .col-lg
            %input.ms-auto.form-control{ 'aria-label': 'Search', name: 'requests_search_text',
              placeholder: 'Search Requests', type: 'text', value: selected_filter[:search_text] }
      .card
        .card-body.list-group.list-group-flush.p-3#requests
          .text-center.mb-3
            - if bs_requests.total_count == 0
              %p There are no requests available
            - else
              %span.ms-3= page_entries_info(bs_requests, entry_name: 'request')
          = render partial: 'webui/shared/bs_requests/request_item', collection: bs_requests, as: :bs_request
          = paginate bs_requests, views_prefix: 'webui'
  = form.submit(nil, class: 'd-none')

:javascript
  collectMultiSelects();

  function submitRequestFilters() {
    $('#requests-filter-form').submit();
    $('#filters input').attr('disabled', 'disabled');
    $('#requests-list').hide();
    $('#requests-list-loading').removeClass('d-none');
  }

  function highlightSelectedFilters() {
    var filters = $('#filters .accordion .accordion-item');
    filters.each(function() {
      var currentFilter = $(this);
      var selectedContentWrapper = currentFilter.find('.selected-content');
      if (selectedContentWrapper.length > 0) {
        var anySelected = []
        $(this).find('input').each(function() {
          if ($(this).is(':checked')) {
            anySelected.push($(this).next('label').html());
          }
        });
        if (anySelected.length > 0) {
          currentFilter.find('.selected-content').html(anySelected.join(', '));
        }
        else {
          currentFilter.find('.selected-content').text("");
        }
      }
    });
  }
  highlightSelectedFilters();

  let submitFiltersTimeout;

  $(document).on('change', '#filters input', function() {
    highlightSelectedFilters();
    clearTimeout(submitFiltersTimeout);
    submitFiltersTimeout = setTimeout(submitRequestFilters, 2000);
  });
