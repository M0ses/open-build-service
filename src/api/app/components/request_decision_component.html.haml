.request-decision
  = form_tag({ action: 'changerequest' }, id: 'request_handle_form', class: 'write-and-preview',
    data: { preview_message_url: preview_comments_path, message_body_param: 'comment[body]' }) do
    = hidden_field_tag(:number, @bs_request.number)
    .px-3.py-1.border.border-1.pb-2{ 'data-canned-controller': '' }
      - if policy(Comment.new(commentable: @bs_request)).locked?
        .alert.alert-warning.mt-2{ role: 'alert' }
          Commenting on this is locked.
          - if CommentLockPolicy.new(User.session, @bs_request).create?
            = helpers.comment_lock_alert(@bs_request)
      .card
        %ul.card-header.nav.nav-tabs.px-3.pt-2.pb-0.disable-link-generation{ role: 'tablist' }
          %li.nav-item
            = link_to('Write', "#write_new_comment", class: 'nav-link active', data: { 'bs-toggle': 'tab' },
            role: 'tab', aria: { controls: 'write-comment-tab', selected: 'true'})
          %li.nav-item
            = link_to('Preview', '#preview_new_comment', class: 'nav-link preview-message-tab', data: { 'bs-toggle': 'tab' },
            role: 'tab', aria: { controls: 'preview-message-tab', selected: 'false' })
        .tab-content.px-3
          .tab-pane.fade.show.active.my-3{ id: 'write_new_comment', role: 'tabpanel',
                                          'aria-labelledby': 'write-comment-tab', 'data-canned-controller': '' }
            - if Flipper.enabled?(:content_moderation, User.session)
              .d-flex.justify-content-end
                = render CannedResponsesDropdownComponent.new(User.session.canned_responses.where(decision_type: nil).order(:title))
            = text_area_tag(:reason, nil,
                            placeholder: 'Write your comment or decision...(markdown is only supported for comments, not for decisions)',
                            rows: 4, class: 'w-100 form-control mb-2 message-field')
          .tab-pane.fade{ id: 'preview_new_comment', role: 'tabpanel', 'aria-labelledby': 'preview-message-tab' }
            .comment-preview.message-preview.border-bottom.border-gray-300.my-3
      - if single_action_request && @is_target_maintainer && @bs_request.state.in?([:new, :review])
        - if show_add_submitter_as_maintainer_option?
          .form-check.mb-2.mt-2
            = check_box_tag('add_submitter_as_maintainer_0', "#{@action.target_project}_#_#{@action.target_package}",
                            false,
                            class: 'form-check-input')
            %label.form-check-label{ for: 'add_submitter_as_maintainer_0' }
              Add #{link_to(@bs_request.creator, user_path(@bs_request.creator))} as maintainer for
              #{helpers.project_or_package_link(project: @action.target_project, package: @action.target_package, short: true)}
        - if @action.type == 'submit'
          - @action.forward.each_with_index do |forward, index|
            .form-check.mb-2
              = check_box_tag("forward-#{index}", "#{forward[:project]}_#_#{forward[:package]}", true, class: 'form-check-input')
              %label.form-check-label{ for: "forward-#{index}" }
                Forward submit request to
                #{helpers.project_or_package_link(project: forward[:project], package: forward[:package], short: true)}
      - if policy(@bs_request).revoke_request?
        = submit_tag 'Revoke request', name: 'revoked', class: 'btn btn-danger me-2', data: other_decision_confirmation('revoke')
      - if policy(@bs_request).reopen_request?
        = submit_tag 'Reopen request', name: 'new', class: 'btn btn-warning me-2', data: other_decision_confirmation('reopen')
      - if policy(@bs_request).accept_request?
        - if policy(@bs_request).decline_request?
          = submit_tag('Decline request', name: 'declined', title: 'Decline the request, as the author of the request you can reopen it again.',
                      class: 'btn btn-danger me-2', data: other_decision_confirmation('decline'))
        = submit_tag('Accept request', name: 'accepted', title: 'Accept the request, this will apply the changes on the target.',
                    class: 'btn btn-secondary me-2', data: confirmation)
      - if policy(Comment.new(commentable:@bs_request)).create?
        = submit_tag 'Add comment', class: 'btn btn-primary me-2', data: { disable_with: 'Creating comment...' }, name: 'commented'

:javascript
  attachPreviewMessageOnCommentBoxes();
